swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
  - https
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions module
      summary: Fetching user accounts
      description: Get all user accounts 
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User accounts retrieved successully
          schema:
            $ref: '#/definitions/ApiAccountsResponse'
        '404':
          description: Accounts not found
        '500':
          description: Error on the server - Your request could not be completed 
  /account/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions module
      summary: Fetching one user account
      description: Get one user account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User account retrieved successully
          schema:
            $ref: '#/definitions/ApiOneAccountResponse'
        '404':
          description: Account not found
        '500':
          description: Error on the server - Your request could not be completed 
  /account/{id}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions module
      summary: Fetching user one account's transactions
      description: Get all transactions of a user's account
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/ApiTransactionsResponse'
        '404':
          description: Transactions not found
        '500':
          description: Error on the server - Your request could not be completed 
  /transaction/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions module
      summary: Fetching one transaction
      description: Get one user transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          type: number
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transaction retrieved successfully
          schema:
            $ref: '#/definitions/ApiOneTransactionResponse'
        '404':
          description: Transaction not found
        '500':
          description: Error on the server - Your request could not be completed
    post:
      security:
        Bearer: []
      tags:
        - Transactions module
      summary: Post a specific transaction
      description: Add a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          type: number
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: Transaction posted successully
          schema:
            $ref: "#/definitions/Transaction"
          "400":
            description: Invalid Fields
          "500":
            description: Error on the server - Your request could not be completed
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions module
      summary: Delete a specific transaction
      description: Delete a specific transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          type: number
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transaction deleted successfully
          schema:
            tpye: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
                example: Success
        '404':
          description: Transaction not found
        '500':
          description: Error on the server - Your request could not be completed 
    patch:
      security:
        - Bearer: []
      tags:
        - Transactions module
      summary: Updating a transaction
      description: User can update a transaction's note or category
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: path
          name: transactionId
          type: number
          required: true
        - in: body
          name: body
          description: Update transaction's attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/ApiOneTransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Error on the server - Your request could not be completed 

          
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  Account:
    type: object
    properties:
      accountId:
        type: string
        example: ABchecking123
      name:
        type: string
        example: ArgentBank checking
      balance:
        type: number
      description:
        type: string 
  ApiAccountsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      accounts:
        type: array
        items:
          $ref: "#/definitions/Account" 
  ApiOneAccountResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      account:
        type: object
        properties: 
          accountId:
            type: string
          name:
            type: string
          balance:
            type: number
          description:
            type: string 
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: transaction ID
      date:
        type: string
        description: transaction date
      description:
        type: string
        description: transaction description
      amount:
        type: number
        description: transaction amount
      balance:
        type: number
        description: account balance after transaction
      transactionType:
        type: string
        description: transaction type
      category:
        type: string
        description: transaction category
      note:
        type: string
        description: user's notes for transaction
  ApiTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      transactions:
        type: array
        items:
          $ref: "#/definitions/Transaction"
  ApiOneTransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      transaction:
        type: object
        properties:
          id:
            type: string
          date:
            type: string
          description:
            type: string
          amount:
            type: number
          balance:
            type: number
          transactionType:
            type: string
          category:
            type: string
          note:
            type: string
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        description: transaction category
      notes: 
        type: string
        description:  user notes about the transaction